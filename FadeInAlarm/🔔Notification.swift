import SwiftUI

enum ðŸ””Notification {
    private static let api = UNUserNotificationCenter.current()
    
    static func removeAllNotifications() {
        Self.api.removeAllDeliveredNotifications()
        Self.api.removeAllPendingNotificationRequests()
    }
    
    static func add(title: LocalizedStringResource,
                    body: LocalizedStringResource? = nil,
                    sound: UNNotificationSound? = nil) {
        let â“’ontent = UNMutableNotificationContent()
        â“’ontent.title = String(localized: title)
        if let body { â“’ontent.body = String(localized: body) }
        â“’ontent.sound = sound
        let â“£rigger = UNTimeIntervalNotificationTrigger(timeInterval: 1, repeats: false)
        let â“¡equest = UNNotificationRequest(identifier: title.key,
                                            content: â“’ontent,
                                            trigger: â“£rigger)
        Task { try? await Self.api.add(â“¡equest) }
    }
    
    static func setupNotification() {
        Task { try await Self.api.requestAuthorization(options: [.alert, .sound]) }
    }
    
    static func checkAuthDenied() async -> Bool {
        await Self.api.notificationSettings().authorizationStatus == .denied
    }
}

extension ðŸ””Notification {
    struct Handling: ViewModifier {
        @EnvironmentObject private var ðŸ“±: ðŸ“±AppModel
        @Environment(\.scenePhase) var scenePhase
        @AppStorage("BackUpAlert") private var â“‘ackUpAlertOption: Bool = false
        func body(content: Content) -> some View {
            content
                .task { ðŸ””Notification.setupNotification() }
                .onChange(of: self.scenePhase) {
                    if $0 == .active { ðŸ””Notification.removeAllNotifications() }
                }
                .onChange(of: ðŸ“±.ðŸ”›phase) {
                    if self.â“‘ackUpAlertOption, case .maxVolume = $0 {
                        Timer.scheduledTimer(withTimeInterval: 10, repeats: true) {
                            if ðŸ“±.ðŸ”›phase != .maxVolume {
                                $0.invalidate()
                            } else {
                                ðŸ””Notification.add(title: "Back up alert", sound: .default)
                            }
                        }
                    }
                }
        }
    }
}
