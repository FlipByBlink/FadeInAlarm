import Foundation

enum ðŸ’¾FileManager {
    private static let api: FileManager = .default
    static let documentDirectoryURL = Self.api.urls(for: .documentDirectory, in: .userDomainMask)[0]
    static func removeItem(at â“¤rl: URL) {
        do {
            try Self.api.removeItem(at: â“¤rl)
        } catch {
            print("ðŸš¨", error); assertionFailure()
        }
    }
    static func copyItem(at â“¢rcURL: URL, to â““stURL: URL) {
        do {
            try Self.api.copyItem(at: â“¢rcURL, to: â““stURL)
        } catch {
            print("ðŸš¨", error); assertionFailure()
        }
    }
}

extension ðŸ’¾FileManager {
    static func getImportedFileURL() -> URL? {
        do {
            let â“¤rls = try Self.api.contentsOfDirectory(at: Self.documentDirectoryURL, includingPropertiesForKeys: nil)
            guard â“¤rls.count <= 1 else { assertionFailure(); return nil }
            return â“¤rls.first
        } catch {
            assertionFailure(); return nil
        }
    }
    static func urlToSave(_ â“•ileName: String) -> URL {
        Self.documentDirectoryURL.appendingPathComponent(â“•ileName)
    }
}
